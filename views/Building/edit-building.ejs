<%- contentFor('HeaderCss') %>
    <link href="public/assets/libs/select2/css/select2.min.css" rel="stylesheet" type="text/css">
    
    <!-- Plugins css -->
    <link href="public/assets/libs/dropzone/min/dropzone.min.css" rel="stylesheet" type="text/css">

    <!-- Sweet Alert-->
    <link href="public/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css">

    <!-- Choices Text input-->
    <link href="public/assets/libs/choices/choices.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />


    <!-- <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD18gLv6NmBdEa1ijh1zEOnun7eMFGyp-Q"></script> -->
     <!-- <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD18gLv6NmBdEa1ijh1zEOnun7eMFGyp-Q&libraries=places"></script> -->
<style>
    .border.section-border-color { border-color: rgba(0,0,0, 0.4) !important; }
    .tox.tox-tinymce.is-invalid {
    border: 1px solid red !important;
    border-radius: 4px;
}

.select2-container--default .select2-selection--single.is-invalid {
    border: 1px solid #dc3545 !important; /* Bootstrap red */
    border-radius: 0.375rem;
}
</style>

<%- contentFor('breadcrumb') %>

<%- contentFor('body') %>
<div class="pt-5">
    <div class="sticky-save-container">
        <div class="row align-items-center">
            <div class="col-auto">
                <% if (property && property._id) { %>
                    <div class="d-inline-block">
                        <h4 class="fw-normal mb-0">Building Id #<%= property?._id %> <span class="badge <%= property?.isPublish === true ? 'bg-success' : 'bg-danger' %> ms-2 bg-opacity-25"><%= property?.isPublish === true ? 'Publish' : 'Inactive' %></span></h4>
                    </div>
                <% } %>
            </div>
            <div class="col-auto ms-auto">
                <button type="button" class="btn btn-blue-grey waves-effect waves-light me-1" id="backBtn">Back</button>
                <button type="submit" class="btn btn-success waves-effect waves-light me-1" id="saveProperty">Save Changes</button>
            </div>
        </div>
        <!-- <button type="button" id="sa-warning" class="btn btn-danger delete-property" data-id="<%= property._id %>">Delete</button> -->
    </div>

    <form>
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Building Information</h4>
                        <p class="card-title-desc">Fill information below (<strong>*</strong>) are required fields.</p>
                        
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="mb-3">
                                        <label class="form-label" for="buildingname">Building Name<span class="text-danger">*</span></label>
                                        <input id="name" name="name" type="text" class="form-control" value="<%= property?.name || '' %>" required>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label" for="elm1">Building Description <span class="text-danger">*</span></label>
                                        <textarea class="tinymce-editor" name="description" id="description"><%= property?.description || '' %></textarea>
                                    </div>
                                </div>
                            </div>

                           <div class="row">
                                <div class="col-sm-12">
                                    <div class="mb-3">
                                       
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="maxArea">Tour virtual link</label>
                                        <input id="virtual_link" name="virtual_link" type="text" class="form-control" value="<%= property?.virtual_link || '' %>">
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="maxArea">Sales table link</label>
                                        <input id="table_link" name="table_link" type="text" class="form-control" value="<%= property?.table_link || '' %>">
                                    </div>
                                </div>

                                <!-- <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="addbooks">Add building brochure</label>
                                        <input id="addbooks" name="addbooks" type="file" class="form-control" multiple accept="application/pdf">
                                    </div>
                                </div> -->
                                <div class="row">
                                <!-- Existing PDFs (only in edit mode) -->
                                <% if (property && Array.isArray(property.addbooks) && property.addbooks.length) { %>
                                    <div class="col-12 mb-4">
                                    <label class="form-label">Current Brochures</label>
                                    <div id="existing-pdfs">
                                        <% property.addbooks.forEach(function(url, idx) { %>
                                        <div class="pdf-item d-flex align-items-center mb-2">
                                            <!-- Link or embed -->
                                            <a href="<%= url %>" target="_blank" class="me-3">
                                            ðŸ“„ Brochure <%= idx + 1 %>
                                            </a>
                                            <!-- Optional remove button -->
                                            <button
                                            type="button"
                                            class="btn btn-sm btn-outline-danger remove-pdf"
                                            data-url="<%= url %>"
                                            >
                                            Remove
                                            </button>
                                        </div>
                                        <% }); %>
                                    </div>
                                    <!-- Hidden field to track removals -->
                                    <input type="hidden" name="removeBooks" id="removeBooks" value="[]" />
                                    </div>
                                <% } %>

                                <!-- File input for adding new PDFs -->
                                <div class="col-md-6">
                                    <div class="mb-3">
                                    <label class="form-label" for="addbooks">Add building brochure</label>
                                    <input
                                        id="addbooks"
                                        name="addbooks"
                                        type="file"
                                        class="form-control"
                                        multiple
                                        accept="application/pdf"
                                    >
                                    </div>
                                </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label" for="projectSummery">Project Summary</label>
                                        <textarea class="tinymce-editor" id="projectSummery" name="projectSummery"><%= property?.projectSummery || '' %></textarea>
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label" for="projectSummery">Residential Features</label>
                                        <textarea class="tinymce-editor" id="residential_features" name="residential_features"><%= property?.residential_features || '' %></textarea>
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label" for="projectSummery">NR characteristics</label>
                                        <textarea class="tinymce-editor" id="characteristics" name="characteristics"><%= property?.characteristics || '' %></textarea>
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label" for="projectSummery">Location</label>
                                        <textarea class="tinymce-editor" id="location" name="location"><%= property?.location || '' %></textarea>
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label" for="projectSummery">Unit differences</label>
                                        <textarea class="tinymce-editor" id="unit_differences" name="unit_differences"><%= property?.unit_differences || '' %></textarea>
                                    </div>
                                </div>

                               

                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label" for="projectSummery">Differences</label>
                                        <textarea class="tinymce-editor" id="differences" name="differences"><%= property?.differences || '' %></textarea>
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label" for="projectSummery">Target Audience (Living)</label>
                                        <textarea class="tinymce-editor" id="target_audience" name="target_audience"><%= property?.target_audience || '' %></textarea>
                                    </div>
                                </div>
                            </div> 
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Specifications</h4>
                        <p class="card-title-desc">Fill information below</p>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="minArea">Min Area<span class="text-danger">*</span></label>
                                    <input id="min_area" name="min_area" type="text" class="form-control" value="<%= property?.min_area ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="maxArea">Max Area <span class="text-danger">*</span></label>
                                    <input id="max_area" name="max_area" type="text" class="form-control" value="<%= property?.max_area ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="minArea">Min Bedrooms <span class="text-danger">*</span></label>
                                    <input id="min_bedrooms" name="min_bedrooms" type="text" class="form-control" value="<%= property?.min_bedrooms ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="max_bedrooms">Max Bedrooms<span class="text-danger">*</span></label>
                                    <input id="max_bedrooms" name="max_bedrooms" type="text" class="form-control" value="<%= property?.max_bedrooms ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="min_bathrooms">Min Bathrooms<span class="text-danger">*</span></label>
                                    <input id="min_bathrooms" name="min_bathrooms" type="text" class="form-control" value="<%= property?.min_bathrooms ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="max_bathrooms">Max Bathrooms<span class="text-danger">*</span></label>
                                    <input id="max_bathrooms" name="max_bathrooms" type="text" class="form-control" value="<%= property?.max_bathrooms ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="minArea">Min Parking<span class="text-danger">*</span></label>
                                    <input id="min_parking" name="min_parking" type="text" class="form-control" value="<%= property?.min_parking ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="maxArea">Max Parking<span class="text-danger">*</span></label>
                                    <input id="max_parking" name="max_parking" type="text" class="form-control" value="<%= property?.max_parking ?? '' %>" required>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="minArea">Min Suites<span class="text-danger">*</span></label>
                                    <input id="min_suites" name="min_suites" type="text" class="form-control" value="<%= property?.min_suites ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="maxArea">Max Suites<span class="text-danger">*</span></label>
                                    <input id="max_suites" name="max_suites" type="text" class="form-control" value="<%= property?.max_suites ?? '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label" for="choices-text-features">Features <span class="small">(Type and hit enter)</span></label>
                                    <input
                                        class="form-control"
                                        id="choices-text-features"
                                        type="text"
                                        name="features"
                                        placeholder="Enter features"
                                        value="<%= property?.features?.join(',') || '' %>"
                                    />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <label class="form-label mb-3">Opportunity</label>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox"  id="broker" name="opportunity[broker]" required="" <%= property?.opportunity?.broker ? 'checked' : '' %>>
                                            <label class="form-check-label" for="broker">
                                                Broker
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="client" name="opportunity[client]" id="invalidtooltipCheck" required="" <%= property?.opportunity?.client ? 'checked' : '' %>>
                                            <label class="form-check-label" for="client">
                                                Client
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="exchange_units" name="opportunity[exchange_units]" id="invalidtooltipCheck" required="" <%= property?.opportunity?.exchange_units ? 'checked' : '' %> >
                                            <label class="form-check-label" for="exchange_units">
                                                Exchange Units 
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="tenanted_investment_property" name="opportunity[tenanted_investment_property]" id="invalidtooltipCheck" required="" <%= property?.opportunity?.tenanted_investment_property ? 'checked' : '' %>>
                                            <label class="form-check-label" for="tenanted_investment_property">
                                                Tenanted Investment Property
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="social_housing_program" name="opportunity[social_housing_program]" id="invalidtooltipCheck" required="" <%= property?.opportunity?.social_housing_program ? 'checked' : '' %>>
                                            <label class="form-check-label" for="social_housing_program">
                                                Social Housing Program
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="featured_building" name="opportunity[featured_building]"  id="invalidtooltipCheck" required="" <%= property?.opportunity?.featured_building ? 'checked' : '' %>>
                                            <label class="form-check-label" for="featured_building">
                                                Featured Building
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="card">
                    <div class="card-body">

                        <h4 class="card-title">Address</h4>
                        <p class="card-title-desc">Fill information below</p>

                        
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metatitle">Street Type <span class="text-danger">*</span></label>
                                        <input id="street_type" name="street_type" value="<%= property?.address?.street_type || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metakeywords">Street <span class="text-danger">*</span></label>
                                        <input id="street" name="street" value="<%= property?.address?.street || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">Number<span class="text-danger">*</span></label>
                                        <input data-parsley-type="number" type="text" class="form-control" id="number" name="number" value="<%= property?.address?.number || '' %>"  required />
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">Area <span class="text-danger">*</span></label>
                                        <input id="area" name="area" value="<%= property?.address?.area || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">Latitude<span class="text-danger">*</span></label>
                                        <input id="lat" name="lat" value="<%= property?.address?.latitude || '' %>" type="text" class="form-control" required>
                                        <button type="button" class="btn btn-link p-0 text-indigo" onclick="openMapModal()"> <small>Select Location on Map</small></button>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">Longitude<span class="text-danger">*</span></label>
                                        <input id="long" name="long" value="<%= property?.address?.longitude || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">City<span class="text-danger">*</span></label>
                                        <input id="city" name="city" value="<%= property?.address?.city || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">State<span class="text-danger">*</span></label>
                                        <input id="state" name="state" value="<%= property?.address?.state || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">Zip Code<span class="text-danger">*</span></label>
                                        <input id="zip_code" name="zip_code" value="<%= property?.address?.zip_code || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">Status<span class="text-danger">*</span></label>
                                        <input id="status_field" name="status_field" value="<%= property?.status || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>
                                
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="metadescription">Stage <span class="text-danger">*</span></label>
                                        <input id="stage" name="stage" value="<%= property?.stage || '' %>" type="text" class="form-control" required>
                                    </div>
                                </div>
                            </div>
                    </div>
                </div>

                
                <div class="card">
                    <div class="card-body">
                        <h4 class="fs-5 card-title">Safety in Building</h4>
                        <p class="card-title-desc">Fill information below</p>
                        <div class="">
                            <div class="border-bottom pb-4 mb-4">
                                <div class="row">
                                    <div class="col-ms-12">
                                        
                                        <div id="safety-multiInput" 
                                            data-show-input="true"
                                            data-show-textarea="true"
                                            data-input-count="1"
                                            data-textarea-count="1"
                                            data-col-input="col-md-12"
                                            data-placeholder-input=" " 
                                            data-label-inputs="Aspect"
                                            data-col-textarea="col-md-12" 
                                            data-placeholder-textarea=" " 
                                            data-label-textareas="Details"></div>
                                        <button type="button" class="btn btn-purple waves-light" onclick="addNewRow('safety-multiInput')">Add More</button>
                                        
                                    </div>
                                </div>
                            </div>
                            <div class="border-bottom pb-4 mb-4">
                                <h4 class="card-title mb-3">Comparison with Other Safe Regions</h4>
                                <div class="row">
                                    <div class="col-ms-12">
                                        <div id="comparison-with-safe-regions-multiInput" 
                                            data-show-input="true"
                                            data-show-textarea="true"
                                            data-input-count="1"
                                            data-textarea-count="1"
                                            data-col-input="col-md-12"
                                            data-placeholder-input=" " 
                                            data-label-inputs="Region"
                                            data-col-textarea="col-md-12" 
                                            data-placeholder-textarea=" " 
                                            data-label-textareas="Similar Features"></div>
                                        <button type="button" class="btn btn-purple waves-light" onclick="addNewRow('comparison-with-safe-regions-multiInput')">Add More</button>
                                    </div>
                                </div>
                            </div>

                            <div class="border-bottom pb-4 mb-4">
                                <h4 class="card-title mb-3">Points of Attention</h4>
                                <div class="row">
                                    <div class="col-ms-12">
                                        <div id="points-of-attention-multiInput" 
                                            data-show-input="true"
                                            data-show-textarea="true"
                                            data-input-count="1"
                                            data-textarea-count="1"
                                            data-col-input="col-md-12"
                                            data-placeholder-input=" " 
                                            data-label-inputs="Aspect"
                                            data-col-textarea="col-md-12"
                                            data-placeholder-textarea=" " 
                                            data-label-textareas="Details"></div>
                                        <button type="button" class="btn btn-purple waves-light" onclick="addNewRow('points-of-attention-multiInput')">Add More</button>
                                    </div>
                                </div>
                            </div>
                            <div class="">
                                <label class="form-label" for="conclusion">Conclusion</label>
                                <textarea id="conclusion" rows="5" class="form-control"><%= property?.conclusion || '' %> </textarea>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h4 class="fs-5 card-title">Advantages of Living in Building</h4>
                        <p class="card-title-desc">Fill information below</p>

                        <div class="mb-3">
                            <textarea class="form-control" rows="5" id="living_buidling"><%= property?.living_buidling || '' %></textarea>
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="gastronomy">Gastronomy</label>
                            <textarea class="tinymce-editor" id="gastronomy" name="gastronomy"><%= property?.gastronomy || '' %></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="education">Education</label>
                            <textarea class="tinymce-editor" id="education" name="education"><%= property?.education || '' %></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="hospitals-and-health">Hospitals and Health</label>
                            <textarea class="tinymce-editor" id="hospitals-and-health" name="hospitals-and-health"><%= property?.hospitals_and_health || '' %></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="shopping">Shopping</label>
                            <textarea class="tinymce-editor" id="shopping" name="shopping"><%= property?.shopping || '' %></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="leisure-and-culture">Leisure and Culture</label>
                            <textarea class="tinymce-editor" id="leisure-and-culture" name="leisure-and-culture"><%= property?.leisure_and_culture || '' %></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="fitness">Fitness</label>
                            <textarea class="tinymce-editor" id="fitness" name="fitness"><%= property?.fitness || '' %></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="summary">Summary</label>
                            <textarea class="form-control" rows="5" id="summary" name="summary"><%= property?.summary || '' %></textarea>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h4 class="fs-5 card-title">Profitability Analysis</h4>
                        <p class="card-title-desc">Fill information below</p>
                        <div class="border-bottom pb-4 mb-4">
                            <div class="row">
                                <div class="col-ms-12">
                                    <div id="profitability-analysis-multiInput"
                                        data-show-input="true"
                                        data-show-textarea="false"
                                        data-input-count="4"
                                        data-col-input="col-sm-6"
                                        data-label-inputs="Type of Property, Projected Revenue (R$), Operating Expenses (R$), Net Operating Income (NOI) (R$)"
                                        data-placeholder-input="Enter info">
                                    </div>
                                    <button type="button" class="btn btn-purple waves-light" onclick="addNewRow('profitability-analysis-multiInput')">Add More</button>
                                    

                                    
                                </div>
                               
                            </div>
                            <div class="mb-3 mt-4">
                                <label class="form-label" for="comparative_reais">Comparative (in Reais)
                                </label>
                                <textarea class="tinymce-editor"  id="comparative_reais" name="comparative_reais"><%= property?.comparative_reais || '' %></textarea>
                            </div>
                            <div class="mb-3">
                                <label class="form-label" for="Considerations">Considerations
                                </label>
                                <textarea class="tinymce-editor"  id="considerations" name="considerations"><%= property?.considerations || '' %></textarea>
                            </div>
                            <div class="mb-3">
                                <label class="form-label" for="conclusion_profitability">Conclusion
                                </label>
                                <textarea class="form-control" rows="5" id="conclusion_profitability" name="conclusion_profitability"><%= property?.conclusion_profitability || '' %></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- <div class="card">
                    <div class="card-body">
                        <h4 class="card-title mb-4">Developer Details</h4>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="mb-3">
                                    <label class="form-label" for="metadescription">Developer ID</label>
                                    <input id="developer_id" name="developer_id" value="<%= property?.developer?.id || '' %>" type="text" class="form-control">
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="mb-3">
                                    <label class="form-label" for="metadescription">Developer Name</label>
                                    <input id="developer" name="developer" value="<%= property?.developer?.name || '' %>" type="text" class="form-control">
                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div> -->

            </div>

            <div class="col-lg-4">
                <div class="card">
                    <div class="card-body">
                        
                        <h4 class="card-title pb-3">Pricing</h4>

                        <div class="mb-3">
                            <label class="form-label" for="metadescription">Min Price<span class="text-danger">*</span></label>
                            <input data-parsley-type="number" type="text" class="form-control" id="min_price" name="min_price" value="<%= property?.min_price || '' %>" required />
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="metadescription">Price Per Square Meter<span class="text-danger">*</span></label>
                            <input data-parsley-type="number" type="text" class="form-control" id="price_per_private_square_meter" name="price_per_private_square_meter" value="<%= property?.price_per_private_square_meter || '' %>" required />
                        </div>

                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title pb-3">Organize</h4>
                      
                    <input  type="hidden" id="developer_id_tb" name="developer_id" value="<%= developerLoggedInId %>" >

                        <div class="mb-3">
                            <label class="form-label">Publish</label>
                            <select class="select2 form-select" name="isPublish" id="isPublish"  data-placeholder="Choose ...">
                                <option value="1" <%= property?.isPublish === true ? 'selected' : '' %>>Published</option>
                                <option value="0" <%= property?.isPublish === false || property?.isPublish === undefined ? 'selected' : '' %>>Inactive</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="metadescription">Property Type <small class="text-muted">(Finality)</small></label>
                            <input id="finality" name="finality" value="<%= property?.finality || '' %>"  type="text" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
 </div>
<div class="modal fade" id="mapModal" tabindex="-1" aria-labelledby="mapModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header align-items-start">
                <h5 class="modal-title">Select Location on Map</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="w-100 bg-light pt-2 pb-3 px-3">
                <label class="form-label">Search location</label>
                <input id="mapSearchInput" class="form-control" type="text" placeholder="Search for a location">
            </div>
            <div class="modal-body" style="height: 500px;">
                <div id="map" style="height: 100%; width: 100%;"></div>
            </div>
        </div>
    </div>
</div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD18gLv6NmBdEa1ijh1zEOnun7eMFGyp-Q&libraries=places" async defer></script>

<%- contentFor('FooterJs') %>

    <script src="public/assets/libs/select2/js/select2.min.js"></script>

    <script src="public/assets/js/pages/ecommerce-select2.init.js"></script>

    <!--tinymce js-->
    <script src="public/assets/libs/tinymce/tinymce.min.js"></script>

    <script src="public/assets/libs/parsleyjs/parsley.min.js"></script>

    <script src="public/assets/js/pages/form-validation.init.js"></script>

    <!-- Plugins js -->
    <script src="public/assets/libs/dropzone/min/dropzone.min.js"></script>

    <!-- init js -->
    <script src="public/assets/js/pages/form-editor.init.js"></script>

    <!-- Sweet Alerts js -->
    <script src="public/assets/libs/sweetalert2/sweetalert2.min.js"></script>

    <!-- Choices Text Input js -->
    <script src="public/assets/libs/choices/choices.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>


    

    <script>
        //Warning Message
        $('#sa-warning').click(function () {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert back!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#4ac18e",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, delete it!"
              }).then(function (result) {
                if (result.value) {
                    const propertyId = $(".delete-property").data("id");
                    $.ajax({
                url: `/deleteProperty/${propertyId}`,
                method: "DELETE",
                success: function (res) {
                    if (res.status === true) {
                        Swal.fire("Deleted!", "Property deleted successfully.", "success");
                        window.location.href = '/developers-building-lists';
                        // Optionally call fetchDevelopers(); if you want to reload without redirect
                    } else {
                        Swal.fire("Deleted!", res.message || "An error occurred. Please try again.", "error");

                        //showNotification("error", res.message || "An error occurred. Please try again.");
                    }
                },
                error: function (xhr) {
                    if (xhr.status === 401) {
                        //showNotification('error', 'Token is expired or missing');
                        Swal.fire("", "Token is expired or missing.", "error");

                        window.location.href = '/login';
                    } else {
                        //showNotification('error', xhr.responseJSON?.message || 'An error occurred. Please try again.');
                        Swal.fire("Deleted!", xhr.responseJSON?.message || 'An error occurred. Please try again.', "error");

                    }
                }
            });
                  
                }
            });
        });
    </script>

<script>
    var setTimeoutVar;
      function showNotification(type, message) {
        var cssClass, icon;
        if (type == "success") {
          cssClass = "alert-success";
          icon = "fa-check-circle";
        } else if (type == "info") {
          cssClass = "alert-info";
          icon = "fa-info-circle";
        } else if (type == "warning") {
          cssClass = "alert-warning";
          icon = "fa-exclamation-triangle";
        } else if (type == "danger") {
          cssClass = "alert-danger";
          icon = "fa-times-circle";
        } else {
          cssClass = "alert-primary";
          icon = "fa-thumbs-up";
        }
        clearTimeout(setTimeoutVar);
        jQuery(".alert").removeClass(
          "alert-success alert-info alert-warning alert-danger alert-primary"
        );
        jQuery(".alert").fadeIn();
        jQuery(".alert").addClass(cssClass);
        jQuery(".notificationIcon").addClass(icon);
        jQuery(".notificationText").html(message);
        setTimeoutVar = setTimeout(function () {
          jQuery(".alert").fadeOut();
          jQuery(".alert").removeClass(cssClass);
          jQuery(".notificationIcon").removeClass(icon);
        }, 5000);
      }

      $('#features').select2({
        tags: true,
        placeholder: "Choose or add features",
        tokenSeparators: [',', '\n'],
        createTag: function (params) {
            var term = $.trim(params.term);
            if (term === '') {
                return null;
            }
            return {
                id: term,
                text: term,
                newTag: true // add additional property
            };
        }
    });
    
    let map, marker;
      function openMapModal() {
    const lat = parseFloat(document.getElementById('lat').value) || 28.6139; // Default to Delhi
    const lng = parseFloat(document.getElementById('long').value) || 77.2090;

    $('#mapModal').modal('show');

    setTimeout(() => {
      if (!map) {
        initMap(lat, lng);
      } else {
        map.setCenter({ lat, lng });
        marker.setPosition({ lat, lng });
      }
    }, 500);
  }

  function initMap(lat, lng) {
    map = new google.maps.Map(document.getElementById("map"), {
      center: { lat, lng },
      zoom: 14,
    });

    marker = new google.maps.Marker({
      position: { lat, lng },
      map: map,
      draggable: true
    });

    marker.addListener('dragend', function () {
      const pos = marker.getPosition();
      document.getElementById('lat').value = pos.lat().toFixed(6);
      document.getElementById('long').value = pos.lng().toFixed(6);
    });

    map.addListener('click', function (event) {
      marker.setPosition(event.latLng);
      document.getElementById('lat').value = event.latLng.lat().toFixed(6);
      document.getElementById('long').value = event.latLng.lng().toFixed(6);
    });

    const input = document.getElementById("mapSearchInput");
    const autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo("bounds", map);

    autocomplete.addListener("place_changed", function () {
      const place = autocomplete.getPlace();
      

      map.setCenter(place.geometry.location);
      map.setZoom(14);
      marker.setPosition(place.geometry.location);

      document.getElementById('lat').value = place.geometry.location.lat().toFixed(6);
      document.getElementById('long').value = place.geometry.location.lng().toFixed(6);
    });

    // Support Enter key manually
    input.addEventListener("keydown", function (e) {
      if (e.key === "Enter") {
        e.preventDefault();

        const service = new google.maps.places.AutocompleteService();
        service.getPlacePredictions({ input: input.value }, function (predictions, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK && predictions[0]) {
            const placeId = predictions[0].place_id;
            const placesService = new google.maps.places.PlacesService(map);

            placesService.getDetails({ placeId: placeId }, function (place, status) {
              if (status === google.maps.places.PlacesServiceStatus.OK && place.geometry) {
                map.setCenter(place.geometry.location);
                map.setZoom(14);
                marker.setPosition(place.geometry.location);

                document.getElementById('lat').value = place.geometry.location.lat().toFixed(6);
                document.getElementById('long').value = place.geometry.location.lng().toFixed(6);
              } else {
                alert("No geometry found for input: " + input.value);
              }
            });
          } else {
            alert("No predictions found for: " + input.value);
          }
        });
      }
    });
  }


    const existingData = {
        safety: <%- JSON.stringify(property?.safety || []) %>,
        comparisonWithSafeRegions: <%- JSON.stringify(property?.comparison_with_safe_regions || []) %>,
        pointsOfAttention: <%- JSON.stringify(property?.points_of_attention || []) %>,
        profitabilityAnalysis: <%- JSON.stringify(property?.profitability_analysis || []) %>
    };


window.addEventListener('DOMContentLoaded', () => {
    const dataMap = {
        'safety-multiInput': existingData?.safety,
        'comparison-with-safe-regions-multiInput': existingData?.comparisonWithSafeRegions,
        'points-of-attention-multiInput': existingData?.pointsOfAttention,
        'profitability-analysis-multiInput': existingData?.profitabilityAnalysis
    };

    Object.entries(dataMap).forEach(([containerId, dataArray]) => {
        const isProfitability = (containerId === 'profitability-analysis-multiInput');
        // Only process if dataArray is actually an array
        if (Array.isArray(dataArray)) {
            if (dataArray.length > 0) {
                dataArray.forEach(entry => {
                    if (isProfitability) {
                        addNewRow(containerId, {
                            inputs: [
                                entry.propertyType || '',
                                entry.revenue || '',
                                entry.expenses || '',
                                entry.netIncome || ''
                            ]
                            
                        });
                    } else {
                        addNewRow(containerId, {
                            inputs: [entry.aspect || entry.region || ''],
                            textareas: [entry.details || entry.similarFeatures || '']
                            
                        });
                    }
                });
            } else {
                // Only add one row if it's a real empty array
                addNewRow(containerId);
            }
        } else {
            // Don't do anything if key is undefined or not an array
            console.warn(`No valid array for ${containerId}`);
        }
    });
});


    let rowCount =0;
    function addNewRow(containerId, values = {}) {
        
        console.log("values",values,"containerId",containerId);
    const container = document.getElementById(containerId);
    const inputCount = parseInt(container.getAttribute('data-input-count')) || 1;
    const textareaCount = parseInt(container.getAttribute('data-textarea-count')) || 1;
 
    const inputLabels = (container.getAttribute('data-label-inputs') || '').split(',').map(s => s.trim());
    const textareaLabels = (container.getAttribute('data-label-textareas') || '').split(',').map(s => s.trim());
 
    const inputColClass = container.getAttribute('data-col-input') || 'col-md-6';
    const textareaColClass = container.getAttribute('data-col-textarea') || 'col-md-6';
 
    const showInput = container.getAttribute('data-show-input') !== 'false';
    const showTextarea = container.getAttribute('data-show-textarea') !== 'false';
 
    const borderContainer = document.createElement('div');
    borderContainer.className = 'border border-dark rounded-3 pt-2 mb-3 px-3 position-relative section-border-color';
    const row = document.createElement('div');
    row.className = 'row';
 
    if (showInput) {
        for (let i = 0; i < inputCount; i++) {
            const inputCol = document.createElement('div');
            inputCol.className = inputColClass;
 
            const inputLabel = document.createElement('label');
            inputLabel.className = 'form-label';
            inputLabel.innerText = inputLabels[i] || `Input ${i + 1}`;

            // Add red asterisk
            const inputAsterisk = document.createElement('span');
            inputAsterisk.innerText = ' *';
            inputAsterisk.style.color = 'red';
            inputLabel.appendChild(inputAsterisk);
 
            const inputWrapper = document.createElement('div');
            inputWrapper.className = 'mb-3';
 
            const input = document.createElement('input');
            input.type = 'text';
            input.className = 'form-control';
            //input.value = Array.isArray(values.inputs) ? values.inputs[i] || '' : values || '';
            input.placeholder = '';
 
            // Set value based on passed object structure
            if (Array.isArray(values.inputs)) {
                input.value  = values.inputs[i] || '';
            } else if (values.textarea) {
                input.value = values.inputs || '';
            }
 
           
 
            inputWrapper.appendChild(input);
            inputCol.appendChild(inputLabel);
            inputCol.appendChild(inputWrapper);
            row.appendChild(inputCol);
            
        }
    }
 
    if (showTextarea) {
        for (let i = 0; i < textareaCount; i++) {
            const textareaCol = document.createElement('div');
            textareaCol.className = textareaColClass;
 
            const textareaLabel = document.createElement('label');
            textareaLabel.className = 'form-label';
            textareaLabel.innerText = textareaLabels[i] || `Textarea ${i + 1}`;

            // Add red asterisk
            const textareaAsterisk = document.createElement('span');
            textareaAsterisk.innerText = ' *';
            textareaAsterisk.style.color = 'red';
            textareaLabel.appendChild(textareaAsterisk);
 
            const textareaWrapper = document.createElement('div');
            textareaWrapper.className = 'mb-3';
 
            const textarea = document.createElement('textarea');
            textarea.className = 'form-control';
            textarea.rows = '4';
           // textarea.value = Array.isArray(values.textareas) ? values.textareas[i] || '' : values.textarea || '';
            textarea.placeholder = '';
 
            // Set value based on passed object structure
            if (Array.isArray(values.textareas)) {
                textarea.value = values.textareas[i] || '';
            } else if (values.textarea) {
                textarea.value = values.textarea || '';
            }
 
            textareaWrapper.appendChild(textarea);
            textareaCol.appendChild(textareaLabel);
            textareaCol.appendChild(textareaWrapper);
            row.appendChild(textareaCol);
        }
    }
 
    // if (container.querySelectorAll('.row').length > 0) {
        const deleteCol = document.createElement('div');
        deleteCol.className = 'col-12';
 
        const deleteBtn = document.createElement('button');
        deleteBtn.type = 'button';
        deleteBtn.className = 'btn btn-link text-danger p-0 position-absolute end-0 me-3 mb-2';
        deleteBtn.innerText = 'Delete';
 
        deleteBtn.addEventListener('click', () => {
            container.removeChild(borderContainer);
        });
 
        deleteCol.appendChild(deleteBtn);
        row.insertBefore(deleteCol, row.firstChild);
    // }
        borderContainer.appendChild(row);
        container.appendChild(borderContainer);
        rowCount++;
    }

        // Show one row by default in each section
        window.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('[id$="-multiInput"]').forEach(container => {
            const hasExistingRows = container.querySelectorAll('.row').length > 0;
        if (!hasExistingRows) {
            addNewRow(container.id);
        }
        });


        
    });

    $(document).on('click', '.remove-pdf', function() {
        const url = $(this).data('url');
        // 1) Remove the element from the page
        $(this).closest('.pdf-item').remove();

        // 2) Add this URL to the hidden remove list
        const removed = JSON.parse($('#removeBooks').val() || '[]');
        removed.push(url);
        $('#removeBooks').val(JSON.stringify(removed));
    });

    

    $(document).ready(function () {

        $('.select2').select2();
    
        const isEditMode = <%= property?._id ? 'true' : 'false' %>; 
        console.log('Edit Mode:', isEditMode);

        $('#saveProperty').on('click', function (e) {
            e.preventDefault();
            tinymce.triggerSave();
            let valid = true;

            const nameVal = $('#name').val().trim();

            if (!nameVal) {
                valid = false;
                $('#name').addClass('is-invalid');
            } else {
                $('#name').removeClass('is-invalid');
            }

            // Live removal on typing
            $('#name').on('input', function () {
                if ($(this).val().trim()) {
                    $(this).removeClass('is-invalid');
                }
            });

            const descriptionEditor = tinymce.get('description');
            const descriptionContent = descriptionEditor?.getContent({ format: 'text' }).trim();
            const editorContainer = $(descriptionEditor.getContainer());

            if (!descriptionContent) {
                valid = false;
                editorContainer.addClass('is-invalid');
            } else {
                editorContainer.removeClass('is-invalid');
            }

            descriptionEditor.on('input', function () {
                const content = descriptionEditor.getContent({ format: 'text' }).trim();
                if (content) {
                    editorContainer.removeClass('is-invalid');
                }
            });

            // const developerVal = $('#developer_id_tb').val().trim();

            // if (!developerVal) {
            //     valid = false;
            //     $('#developer_id_tb').next('.select2-container').find('.select2-selection').addClass('is-invalid');
            // } else {
            //     $('#developer_id_tb').next('.select2-container').find('.select2-selection').removeClass('is-invalid');
            // }

            // $('#developer_id_tb').on('change', function () {
            //     if ($(this).val().trim()) {
            //         $(this).next('.select2-container').find('.select2-selection').removeClass('is-invalid');
            //     }
            // });

            const finalityVal = $('#finality').val().trim();

            if (!finalityVal) {
                valid = false;
                $('#finality').addClass('is-invalid');
            } else {
                $('#finality').removeClass('is-invalid');
            }

            // Live removal on typing
            $('#finality').on('input', function () {
                if ($(this).val().trim()) {
                    $(this).removeClass('is-invalid');
                }
            });

            const addressFields = [
                { id: '#street_type', name: 'Street Type' },
                { id: '#street', name: 'Street' },
                { id: '#number', name: 'Number' },
                { id: '#area', name: 'Area' },
                { id: '#city', name: 'City' },
                { id: '#state', name: 'State' },
                { id: '#zip_code', name: 'Zip Code' },
                { id: '#lat', name: 'Latitude' },
                { id: '#long', name: 'Longitude' }
            ];

            addressFields.forEach(field => {
                const value = $(field.id).val();
                if (!value) {
                    valid = false;
                    $(field.id).addClass('is-invalid');
                } else {
                    $(field.id).removeClass('is-invalid');
                }

                $(field.id).on('input change', function () {
                    if ($(this).val().trim()) {
                        $(this).removeClass('is-invalid');
                    }
                });
            });

            // Initial validation for specification fields
            const specificationFields = [
                '#min_price', '#min_area', '#max_area',
                '#min_bedrooms', '#max_bedrooms',
                '#min_bathrooms', '#max_bathrooms',
                '#min_parking', '#max_parking', '#price_per_private_square_meter',
                '#min_suites', '#max_suites', '#status_field', '#stage'
            ];

            specificationFields.forEach(id => {
                const value = $(id).val();
                if (!value) {
                    valid = false;
                    $(id).addClass('is-invalid');
                } else {
                    $(id).removeClass('is-invalid');
                }

                $(id).on('input change', function () {
                    if ($(this).val().trim()) {
                        $(this).removeClass('is-invalid');
                    }
                });
            });

           

            
            console.log('target_audience:', $('#target_audience').val());
            //console.log("features",$('#features').val().split(","));

            const isEditMode = <%= property?._id ? 'true' : 'false' %>; 
            const url = isEditMode ? '/updateProperty/<%= property?._id %>' : '/addProperty';
            const method = isEditMode ? 'PUT' : 'POST';

            const formData = new FormData();

            formData.append('name', $('#name').val());
            formData.append('description', $('#description').val());
            //formData.append('id', $('#building_id').val());
            formData.append('min_price', $('#min_price').val());
            formData.append('min_area', $('#min_area').val());
            formData.append('max_area', $('#max_area').val());
            formData.append('min_bedrooms', $('#min_bedrooms').val());
            formData.append('max_bedrooms', $('#max_bedrooms').val());
            formData.append('min_bathrooms', $('#min_bathrooms').val());
            formData.append('max_bathrooms', $('#max_bathrooms').val());
            formData.append('min_parking', $('#min_parking').val());
            formData.append('max_parking', $('#max_parking').val());
            formData.append('min_suites', $('#min_suites').val());
            formData.append('max_suites', $('#max_suites').val());
            formData.append('status', $('#status_field').val());
            formData.append('stage', $('#stage').val());
            formData.append('price_per_private_square_meter', $('#price_per_private_square_meter').val());

            if (featureChoices) {
                let features = featureChoices.getValue(true);
                features.forEach(feature => {
                    formData.append('features[]', feature);
                });
            }

            formData.append('finality', $('#finality').val());
            formData.append('developer_id', $('#developer_id_tb').val());
            formData.append('isPublish', $('#isPublish').val());

            // Opportunity object as JSON string
            formData.append('opportunity', JSON.stringify({
                broker: $('#broker').is(':checked'),
                client: $('#client').is(':checked'),
                exchange_units: $('#exchange_units').is(':checked'),
                tenanted_investment_property: $('#tenanted_investment_property').is(':checked'),
                social_housing_program: $('#social_housing_program').is(':checked'),
                featured_building: $('#featured_building').is(':checked'),
            }));

            // Address object
            formData.append('address', JSON.stringify({
                street_type: $('#street_type').val(),
                street: $('#street').val(),
                number: $('#number').val(),
                latitude: $('#lat').val(),
                longitude: $('#long').val(),
                area: $('#area').val(),
                city: $('#city').val(),
                state: $('#state').val(),
                zip_code: $('#zip_code').val()
            }));


            // New fields added
                formData.append('virtual_link', $('#virtual_link').val());
                formData.append('table_link', $('#table_link').val());

                const files = $('#addbooks')[0].files;
                for (let i = 0; i < files.length; i++) {
                    formData.append('addbooks', files[i]); // multiple files with same field name
                }

                // Append removeBooks if any
                const removeBooks = $('#removeBooks').val();
                if (removeBooks) {
                    formData.append('removeBooks', removeBooks); // stringified array
                }

                formData.append('projectSummery', $('#projectSummery').val());
                formData.append('residential_features', $('#residential_features').val());
                formData.append('characteristics', $('#characteristics').val());
                formData.append('location', $('#location').val());
                formData.append('unit_differences', $('#unit_differences').val());
                formData.append('differences', $('#differences').val());
                formData.append('target_audience', $('#target_audience').val());


                let isValid = true;
                const safetyData = [];

                $('#safety-multiInput .row').each(function () {
                    const $input = $(this).find('input');
                    const $textarea = $(this).find('textarea');
                    const aspect = $input.val().trim();
                    const details = $textarea.val().trim();

                    let rowValid = true;

                    if (!aspect) {
                        $input.addClass('is-invalid');
                        rowValid = false;
                    } else {
                        $input.removeClass('is-invalid');
                    }

                    if (!details) {
                        $textarea.addClass('is-invalid');
                        rowValid = false;
                    } else {
                        $textarea.removeClass('is-invalid');
                    }

                    // Live validation: remove 'is-invalid' when user types
                    $input.on('input', function () {
                        if ($(this).val().trim()) {
                            $(this).removeClass('is-invalid');
                        }
                    });

                    $textarea.on('input', function () {
                        if ($(this).val().trim()) {
                            $(this).removeClass('is-invalid');
                        }
                    });

                    if (rowValid) {
                        safetyData.push({ aspect, details });
                    } else {
                        valid = false;
                    }
                });

                formData.append('safety', JSON.stringify(safetyData));

                

            // Comparison
            const comparisonData = [];

                $('#comparison-with-safe-regions-multiInput .row').each(function () {
                const $input = $(this).find('input');
                const $textarea = $(this).find('textarea');
                const region = $input.val().trim();
                const similarFeatures = $textarea.val().trim();

                let rowValid = true;

                // Validate input
                if (!region) {
                    $input.addClass('is-invalid');
                    rowValid = false;
                } else {
                    $input.removeClass('is-invalid');
                }

                // Validate textarea
                if (!similarFeatures) {
                    $textarea.addClass('is-invalid');
                    rowValid = false;
                } else {
                    $textarea.removeClass('is-invalid');
                }

                // Live validation: remove 'is-invalid' as user types
                $input.on('input', function () {
                    if ($(this).val().trim()) {
                        $(this).removeClass('is-invalid');
                    }
                });

                $textarea.on('input', function () {
                    if ($(this).val().trim()) {
                        $(this).removeClass('is-invalid');
                    }
                });

                if (rowValid) {
                    comparisonData.push({ region, similarFeatures });
                } else {
                    valid = false;
                }
            });

            formData.append('comparison_with_safe_regions', JSON.stringify(comparisonData));

            // Points of Attention
            const attentionPointsData = [];

                $('#points-of-attention-multiInput .row').each(function () {
                    const $input = $(this).find('input');
                    const $textarea = $(this).find('textarea');
                    const aspect = $input.val().trim();
                    const details = $textarea.val().trim();

                    let rowValid = true;

                    // Validate aspect
                    if (!aspect) {
                        $input.addClass('is-invalid');
                        rowValid = false;
                    } else {
                        $input.removeClass('is-invalid');
                    }

                    // Validate details
                    if (!details) {
                        $textarea.addClass('is-invalid');
                        rowValid = false;
                    } else {
                        $textarea.removeClass('is-invalid');
                    }

                    // Live removal of invalid state on user input
                    $input.on('input', function () {
                        if ($(this).val().trim()) {
                            $(this).removeClass('is-invalid');
                        }
                    });

                    $textarea.on('input', function () {
                        if ($(this).val().trim()) {
                            $(this).removeClass('is-invalid');
                        }
                    });

                    if (rowValid) {
                        attentionPointsData.push({ aspect, details });
                    } else {
                        valid = false;
                    }
                });

                formData.append('points_of_attention', JSON.stringify(attentionPointsData));

                // Profitability
            const profitabilityData = [];
                $('#profitability-analysis-multiInput .row').each(function () {
                        const inputs = $(this).find('input');

                        const $propertyType = $(inputs[0]);
                        const $revenue = $(inputs[1]);
                        const $expenses = $(inputs[2]);
                        const $netIncome = $(inputs[3]);

                        const propertyType = $propertyType.val().trim();
                        const revenue = $revenue.val().trim();
                        const expenses = $expenses.val().trim();
                        const netIncome = $netIncome.val().trim();

                        let rowValid = true;

                        // Validate and add/remove is-invalid with live input binding
                        if (!propertyType) {
                            $propertyType.addClass('is-invalid');
                            rowValid = false;
                        } else {
                            $propertyType.removeClass('is-invalid');
                        }
                        $propertyType.on('input', function () {
                            if ($(this).val().trim()) $(this).removeClass('is-invalid');
                        });

                        if (!revenue) {
                            $revenue.addClass('is-invalid');
                            rowValid = false;
                        } else {
                            $revenue.removeClass('is-invalid');
                        }
                        $revenue.on('input', function () {
                            if ($(this).val().trim()) $(this).removeClass('is-invalid');
                        });

                        if (!expenses) {
                            $expenses.addClass('is-invalid');
                            rowValid = false;
                        } else {
                            $expenses.removeClass('is-invalid');
                        }
                        $expenses.on('input', function () {
                            if ($(this).val().trim()) $(this).removeClass('is-invalid');
                        });

                        if (!netIncome) {
                            $netIncome.addClass('is-invalid');
                            rowValid = false;
                        } else {
                            $netIncome.removeClass('is-invalid');
                        }
                        $netIncome.on('input', function () {
                            if ($(this).val().trim()) $(this).removeClass('is-invalid');
                        });

                        if (rowValid) {
                            profitabilityData.push({
                                propertyType,
                                revenue,
                                expenses,
                                netIncome
                            });
                        } else {
                            valid = false;
                        }
                    });

                    formData.append('profitability_analysis', JSON.stringify(profitabilityData));

                if (!valid) {
                    // Scroll to the first invalid input or textarea
                    const firstInvalid = $('.is-invalid').first();
                    if (firstInvalid.length) {
                        $('html, body').animate({
                            scrollTop: firstInvalid.offset().top - 100 
                        }, 500);
                        
                        firstInvalid.focus(); 
                    }
                    Swal.fire("", "Please fill all required fields marked in red.", "error");
                    return;
                }

                // $('#overlayLoader').fadeIn();
                $('#status').fadeIn();
                $('#preloader').fadeIn('slow');
                
                $('#saveProperty').prop('disabled', true);

            

            formData.append('living_buidling', $('#living_buidling').val());
            formData.append('gastronomy', $('#gastronomy').val());
            formData.append('education', $('#education').val());
            formData.append('hospitals_and_health', $('#hospitals-and-health').val());
            formData.append('shopping', $('#shopping').val());
            formData.append('leisure_and_culture', $('#leisure-and-culture').val());
            formData.append('fitness', $('#fitness').val());
            formData.append('summary', $('#summary').val().trim());
            console.log("comparative_reais",$('#comparative_reais').val(),"considerations",$('#considerations').val(),"conclusion_profitability",$('#conclusion_profitability').val())
            formData.append('comparative_reais', $('#comparative_reais').val());
            formData.append('considerations', $('#considerations').val());
            formData.append('conclusion_profitability', $('#conclusion_profitability').val());

            // Conclusion Textarea
            formData.append('conclusion', $('#conclusion').val());
                console.log("developer",$('#developer_id_tb').val());

            $.ajax({
                url: url,
                type: method,
                data: formData,
                contentType: false,
                processData: false,
                xhrFields: {
                    withCredentials: true
                },
                success: function (response) {
                    if (response.success === true) {
                        //showNotification("success", "Property saved successfully.");
                        $('#saveProperty').prop('disabled', true);
                        Swal.fire("", "Property saved successfully.", "success");
                                             
                        
                        setTimeout(() => {
                            const params = new URLSearchParams(window.location.search);
                            params.delete('propertyId'); // Remove propertyId
                            const newQueryString = params.toString();
                            params.size === 0 ? window.location.href = `/building-list` : window.location.href = `/building-list?${newQueryString}`;
                            //window.location.href = "/developers-building-lists";
                        }, 2000);
                    } else {
                        //showNotification("error", response.message || "Error saving property.");
                        Swal.fire("", response.message || "Error saving property.", "error");
                    }
                },
                error: (xhr) => {
                    if (xhr.status === 401) {
                        //showNotification("error", "Token is expired or missing");
                        Swal.fire("", "Token is expired or missing", "error");
                        window.location.href = "/";
                    } else {
                        //showNotification("error", "Server error.");
                        Swal.fire("", "Server error.", "error");
                    }
                },
                complete: function () {
                    // always re-enable
                    // $('#overlayLoader').fadeOut();
                    $('#status').fadeOut();
                    $('#preloader').fadeOut('slow');
                    $('#saveProperty').prop('disabled', false); 
                }
            });
});
   


// Method for Choices text input  
// const input = document.getElementById('choices-text-features');
//   const featureChoices  = new Choices(input, {
//     delimiter: ',',
//     editItems: true,
//     maxItemCount: 20,
//     removeItemButton: true,
//     duplicateItemsAllowed: false
//   });

const featureInput = document.getElementById('choices-text-features');
let featureChoices;

if (featureInput) {
  featureChoices = new Choices(featureInput, {
    delimiter: ',',
    editItems: true,
    maxItemCount: 10,
    removeItemButton: true,
    duplicateItemsAllowed: false
  });
}

});
    
    
    
    
    </script>

    <script>
        document.getElementById('backBtn').addEventListener('click', function () {
            const params = new URLSearchParams(window.location.search);
            params.delete('propertyId'); // Remove propertyId
            const newQueryString = params.toString();
            params.size === 0 ? window.location.href = `/developers-building-lists` : window.location.href = `/developers-building-lists?${newQueryString}`;
        });
        /*
        document.getElementById('backBtn').addEventListener('click', function () {
            if (document.referrer) {
                window.location.href = document.referrer;
            } else {
                // Fallback if no referrer is available (e.g. user opened page directly)
                window.location.href = '/developers-building-lists';
            }
        });
        */
    </script>

<%- contentFor('BottomJs') %>